user behavior     actionName
search type list  actionName=list
delete type       actionName=delete
add/modify        actionName=addOrUpdate


I. search type list
    ++++front end
        set href value for "type management" in navigation bar
            href="user?actionName=list"
        set navigation bar highlight
            menu page via request

        receive response data
            via JSTL if label, check if type of collection exists
                not, give out notification
                yes, iterate






    +++++back end
        web layer:
            1. get user object in session field
            2. user search method in service layer, search for the collection of types of current log-in user, return collection.
            3. put type list into request field
            4. index dynamically included value
            5. request to redirect to index.jsp


        service layer:
            1. user dao layer search method, via userId, get type list
            2. return a collection of types


        dao layer:
            1. define sql:
                String sql = "select typeId, typeName, userId from tb_note_type where userId = ?"

            2. set parameters
            3. use basedao search method, return a collection


II. delete
    ++++front end
        "delete" button attached with an event(parameter:typeId)
            1. pop put notification, check if delete
            2. if confirmed, send ajax request to delete, return resultInfo
                if failed, notify msg=""
                    table id = "myTable"
                    div id ='myDiv"

                if success, set = 1
                1. remove certain tr record
                2. delete info in navigation dock




    ++++back end
        web layer:
            1. receive parameters, typeID
            2. update operation in service layer, return resultInfo
            3. convert resultInfo object to json format String, respond to ajax method

        service layer:
            1. check if params is empty
            2. call dao layer, search cloud blog numbers via typeId
            3. if # > 0, can be deleted
                code =0, msg="this record can not be deleted"
            4. if no record, use update method in dao layer, delete it
            5. if return value > 1, code=1, else, code=0, msg="deletion failed!"

        dao layer:
            1. search for cloud blog numbers via typeId
            2. delete type records based on typeId


III. add/modify type

    +++front end
        a. open "add frame" modal
            add type button event
            1. set modal title
            2. clean text value and hidden value
            3. open modal again

        b. open "modify frame" modal
            1. set modal title
            2. set current record's typeId and typeName to modal frame.
            3. open modal, show it.


        c. modal save button associate with on click event
            add/modify
            1. get params
                add:typeName; modify:typeName, typeId
            2. if params is empty, notify and return
            3. if not, send ajax request, execute add/modify, return resultInfo
            4. check if updated successfully

    +++back end

        web layer:
            1. receive parameters
            2. get user object from session, get userID
            3. use update method in service layer, return an resultInfo object
            4. respond to ajax


        service layer:
            1. check if params is empty
                empty: code = 0, msg="", return

            2. Use dao layer, check if this name is unique return 0/1.

            3. check if id is empty
                empty: use add method in dao layer, return main key
                not: use modify method in dao layer, return number of rows that are affected

            4. check if mainkey/numRows > 0
                larger than 0: code = 1, result = main key
                else: code = 0, msg = ""

        Dao layer:
            1. under this user, check if type name is unique

            2. add method, return main key

            3. modify method, return numRows

